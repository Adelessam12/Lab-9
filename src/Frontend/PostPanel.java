package Frontend;



import javax.swing.*;
import java.awt.*;
import java.io.File;
import javax.swing.border.EmptyBorder;

public class PostPanel extends JPanel {
 


         private final String content;
    private final String imagePath;

    public PostPanel(String content, String imagePath) {
        this.content = content;
        this.imagePath = imagePath;

        // Set GridLayout for side-by-side panels with a gap of 10 between them
        setLayout(new GridLayout(1, 2, 10,0));  // 1 row, 2 columns, 10px gap

        // Create and add content panel (for text)
        JPanel contentPanel = createContentPanel();
        add(contentPanel);

        // Create and add image panel (for image)
        JPanel imagePanel = createImagePanel();
        add(imagePanel);
    }

    /**
     * Creates a panel for displaying the text content of the post.
     */
    private JPanel createContentPanel() {
        JPanel contentPanel = new JPanel();
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));  // Text content layout vertically

        JLabel contentLabel = new JLabel("<html>" + content.replace("\n", "<br>") + "</html>");
        contentLabel.setForeground(Color.BLACK);  // Set text color
        contentLabel.setHorizontalAlignment(SwingConstants.LEFT);  // Align left
        contentPanel.setOpaque(false); // Make the content panel transparent
        contentLabel.setBorder(new EmptyBorder(0, 0, 0, 10));  // Add some padding to the right

        contentPanel.add(contentLabel);  // Add text label to content panel
        return contentPanel;
    }

    /**
     * Creates a panel for displaying the image content of the post.
     * Includes error handling for missing or invalid images.
     */
    private JPanel createImagePanel() {
        JPanel imagePanel = new JPanel();
        imagePanel.setLayout(new FlowLayout(FlowLayout.LEFT));  // Image layout inside image panel

         
            try {
                File imgFile = new File(imagePath);
                if (imgFile.exists()) {
                    ImageIcon imageIcon = new ImageIcon(imagePath);
                    Image scaledImage = imageIcon.getImage();
                    JLabel imageLabel = new JLabel(new ImageIcon(scaledImage));
                    imagePanel.add(imageLabel);  
                } 
            } catch (Exception e) {
                e.printStackTrace();
                imagePanel.add(createErrorPanel("Failed to load image!"));
            }
         

        imagePanel.setOpaque(false);  // Make the image panel transparent
        return imagePanel;
    }

    /**
     * Creates a panel to display an error message.
     *
     * @param errorMessage The error message to display.
     */
    private JPanel createErrorPanel(String errorMessage) {
        JPanel errorPanel = new JPanel();
        JLabel errorLabel = new JLabel(errorMessage);
        errorLabel.setForeground(Color.RED); // Display error message in red
        errorPanel.add(errorLabel);
        errorPanel.setOpaque(false); // Transparent background
        return errorPanel;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
