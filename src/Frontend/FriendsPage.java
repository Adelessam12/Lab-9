/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import lab.pkg9.User;
import static lab.pkg9.FriendManagement.blockFriend;
import static lab.pkg9.FriendManagement.acceptFriendRequest;
import static lab.pkg9.FriendManagement.declineFriendRequest;
import static lab.pkg9.FriendManagement.sendFriendRequest;
/**
 *
 * @author Mahmoud Waleed
 */
public class FriendsPage extends javax.swing.JFrame {

    /**
     * Creates new form FriendsPage
     */
    private User mah;
    private User ahm;
    private User bro;
    public FriendsPage() {
        initComponents();
        scrollFriends.setVisible(false);
        scrollRequests.setVisible(false);
        setLocationRelativeTo(null);
        friendsContainer.setLayout(new BoxLayout(friendsContainer, BoxLayout.Y_AXIS));
        requestsContainer.setLayout(new BoxLayout(requestsContainer, BoxLayout.Y_AXIS));
            // Create Users and send requests (for demonstration)
        Date dateOfBirth1 = new Date(1995 - 1900, 5, 15); 
        mah = new User("Mah1", "mah@", "Mah", "123", dateOfBirth1, false);
        Date dateOfBirth2 = new Date(1995 - 1900, 5, 15);
        ahm = new User("Ahm1", "ahm@", "Ahm", "1234", dateOfBirth2, false);
        bro = new User("bro1","bro@","nigga","12345",dateOfBirth2,false);
        sendFriendRequest(mah, ahm);
        sendFriendRequest(bro, ahm);
        sendFriendRequest(mah,bro);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollRequests = new javax.swing.JScrollPane();
        requestsContainer = new javax.swing.JPanel();
        scrollFriends = new javax.swing.JScrollPane();
        friendsContainer = new javax.swing.JPanel();
        scrollSuggestions = new javax.swing.JScrollPane();
        suggestionsContainer = new javax.swing.JPanel();
        friends = new javax.swing.JButton();
        requestActivity = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        requestsContainer.setLayout(new javax.swing.BoxLayout(requestsContainer, javax.swing.BoxLayout.LINE_AXIS));
        scrollRequests.setViewportView(requestsContainer);

        friendsContainer.setLayout(new javax.swing.BoxLayout(friendsContainer, javax.swing.BoxLayout.LINE_AXIS));
        scrollFriends.setViewportView(friendsContainer);

        scrollSuggestions.setMaximumSize(new java.awt.Dimension(469, 225));

        suggestionsContainer.setMaximumSize(new java.awt.Dimension(467, 223));
        suggestionsContainer.setMinimumSize(new java.awt.Dimension(467, 223));

        javax.swing.GroupLayout suggestionsContainerLayout = new javax.swing.GroupLayout(suggestionsContainer);
        suggestionsContainer.setLayout(suggestionsContainerLayout);
        suggestionsContainerLayout.setHorizontalGroup(
            suggestionsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );
        suggestionsContainerLayout.setVerticalGroup(
            suggestionsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        scrollSuggestions.setViewportView(suggestionsContainer);

        friends.setText("Show Friends");
        friends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friendsActionPerformed(evt);
            }
        });

        requestActivity.setText("Show Friends Requests");
        requestActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestActivityActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("People You May Know");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(friends, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollSuggestions, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollRequests)
                    .addComponent(requestActivity, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(friends, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollSuggestions, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(scrollRequests, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scrollFriends))
                        .addGap(48, 48, 48))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void friendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friendsActionPerformed
    friends.setText("Hide Friends List");
    
    

    // Clear any previous entries to reset the friend list only when switching views
    if (!scrollFriends.isVisible()) {
        // When scrollFriends is hidden, show it and populate it
        friendsContainer.removeAll(); 
        friendsContainer.revalidate();
        friendsContainer.repaint(); 


       // friends to the UI
        if (mah.getFriendList() != null && !mah.getFriendList().isEmpty()) {
            for (User user : mah.getFriendList()) {
                JPanel entryPanel = new JPanel();
                entryPanel.setLayout(new FlowLayout(FlowLayout.LEFT)); // Horizontal layout for label and button
                JLabel newLabel = new JLabel(user.getUsername()); // Show the friend's username
                JButton remove = new JButton("Remove");
                JButton block = new JButton("  Block  ");

                // Add components to the panel
                entryPanel.add(newLabel);
                entryPanel.add(remove);
                entryPanel.add(block);
                remove.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    mah.removeFriend(user);
                    entryPanel.remove(remove);
                    entryPanel.remove(block);
                    newLabel.setText("Removed");
                }
                });
                  block.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    blockFriend(mah, user);
                    entryPanel.remove(remove);
                    entryPanel.remove(block);
                    newLabel.setText("Blcoked");
                }
                });

                // Add the entry panel to friendsContainer
                friendsContainer.add(entryPanel);
                
            }

            friendsContainer.revalidate();
            friendsContainer.repaint();
        } else {
            System.out.println("No friends found!");
        }
        scrollFriends.setVisible(true);     
        friendsContainer.setVisible(true);  

        // Revalidate the scroll pane to update the view
        scrollFriends.revalidate();
        scrollFriends.repaint();
    } else {
        // Hide the friends list if it's already visible
        scrollFriends.setVisible(false);
        friendsContainer.setVisible(false);
        friends.setText("Show Friends");
    }
    }//GEN-LAST:event_friendsActionPerformed

    private void requestActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestActivityActionPerformed

    requestActivity.setText("Hide Friend Requests");
    if (!scrollRequests.isVisible()) {
        // When scrollRequests is hidden, show it and populate it
        requestsContainer.removeAll(); 
        requestsContainer.revalidate();
        requestsContainer.repaint(); 
    // Clear any previous entries to reset the friend list
    requestsContainer.removeAll();
    requestsContainer.revalidate();  
    requestsContainer.repaint();   
   

  //add friend requests to the UI
    if (ahm.getReceivedFriendRequestStatus()!= null && !ahm.getReceivedFriendRequestStatus().isEmpty()) {
        for (Map.Entry<User, ArrayList<String>> user : ahm.getReceivedFriendRequestStatus().entrySet()) {
            if(user.getValue().get(1).contains("Pending")){
                System.out.println(user.getValue().get(1));
                System.out.println(ahm.getReceivedFriendRequestStatus());
            
            JPanel entryPanel = new JPanel();
            entryPanel.setLayout(new FlowLayout(FlowLayout.LEFT)); // Horizontal layout for label and button
            
            // Create the label dynamically for each friend
            JLabel newLabel = new JLabel(user.getValue().get(0)+ " "+user.getValue().get(1)); 
            JButton accept = new JButton("Accept"); 
            JButton decline = new JButton("Delete"); 
            
            // Add components to the panel
            entryPanel.add(newLabel);
            entryPanel.add(accept);
            entryPanel.add(decline);
            
              accept.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    acceptFriendRequest(ahm, user.getKey());
                    //System.out.println(user.getValue().get(1));
                    entryPanel.remove(accept);
                    entryPanel.remove(decline);
                    newLabel.setText("Accepted");
                    requestsContainer.repaint();
                }
                });
              
              decline.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    declineFriendRequest(ahm, user.getKey());
                    entryPanel.remove(accept);
                    entryPanel.remove(decline);
                    newLabel.setText("Deleted");
                    requestsContainer.repaint();
                }
                });
              
            
            // Add the entry panel to friendsContainer
            requestsContainer.add(entryPanel);
        }

        // Revalidate and repaint after adding components to the container
        requestsContainer.revalidate();
        requestsContainer.repaint();
        }
    }else {
        System.out.println("No requests found!");
    }

    // Make sure the scroll pane and container are visible
    scrollRequests.setVisible(true);      // Ensure the scroll pane is visible
    requestsContainer.setVisible(true);   // Ensure the container is visible

    // Revalidate the scroll pane to update the view
    scrollRequests.revalidate();
    scrollRequests.repaint();
    
    }else{
         // Hide the friend requests if it's already visible
        scrollRequests.setVisible(false);
        requestsContainer.setVisible(false);
        requestActivity.setText("Show Friend Requests");
    }

    }//GEN-LAST:event_requestActivityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FriendsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FriendsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FriendsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FriendsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FriendsPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton friends;
    private javax.swing.JPanel friendsContainer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton requestActivity;
    private javax.swing.JPanel requestsContainer;
    private javax.swing.JScrollPane scrollFriends;
    private javax.swing.JScrollPane scrollRequests;
    private javax.swing.JScrollPane scrollSuggestions;
    private javax.swing.JPanel suggestionsContainer;
    // End of variables declaration//GEN-END:variables
}
